name: Digital Humanities Production Deployment

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-frontend:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.0'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install Dependencies
        run: |
          brew update

      - name: Install sshpass (for password-based SCP)
        run: |
          brew install sshpass

      - name: Install & Build Frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      - name: Deploy Frontend via SCP with Password
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" scp -o StrictHostKeyChecking=no -r frontend/build/* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/var/www/digitalhum

  deploy-backend:
    runs-on: self-hosted
    needs: deploy-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          brew update

      - name: Install sshpass (for password-based SCP)
        run: |
          brew install sshpass

      - name: Prepare Server Directory
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /var/www/empire-history-card
            rm -rf server.old
            mv server server.old || true
            mkdir -p server
          EOF

      - name: Copy Server Files via SCP with Password
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" scp -o StrictHostKeyChecking=no -r server/* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/var/www/empire-history-card/server

      - name: Install & Build Backend
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /var/www/empire-history-card/server
            npm ci
            npm run build
            pm2 restart dh-api || (pm2 start index.js --name dh-api && pm2 save)
            pm2 save
            pm2 startup
          EOF
